#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

void FIFO(int referenceString[], int n, int frameCount) {
    int frames[frameCount];
    for (int i = 0; i < frameCount; i++) {
        frames[i] = -1; // Initially, all frames are empty
    }

    int pageFaults = 0;
    int pageHits = 0;
    int pageMisses = 0;
    int index = 0;

    printf("FIFO Page Replacement:\n");

    for (int i = 0; i < n; i++) {
        int page = referenceString[i];
        bool pageFound = false;

        // Check if page is already in the frames
        for (int j = 0; j < frameCount; j++) {
            if (frames[j] == page) {
                pageFound = true;
                break;
            }
        }

        if (pageFound) {
            pageHits++;
        } else {
            frames[index] = page;
            index = (index + 1) % frameCount; // Move to the next frame in a circular manner
            pageFaults++;
            pageMisses++;
        }

        // Display current frames
        printf("Frames: ");
        for (int j = 0; j < frameCount; j++) {
            if (frames[j] != -1) {
                printf("%d ", frames[j]);
            }
        }
        printf("\n");
    }

    printf("Total Page Hits: %d\n", pageHits);
    printf("Total Page Faults: %d\n", pageFaults);
    printf("Total Page Misses: %d\n", pageMisses);
}

int main() {
    int referenceString[] = {5,0,2,3,0,1,3,4,5,4,2,0,3,4,3};
    int n = sizeof(referenceString) / sizeof(referenceString[0]);
    int frameCount = 3;
    
    FIFO(referenceString, n, frameCount);
    return 0;
}
//Output
FIFO Page Replacement:
Frames: 5 
Frames: 5 0 
Frames: 5 0 2 
Frames: 3 0 2 
Frames: 3 0 2 
Frames: 3 1 2 
Frames: 3 1 2 
Frames: 3 1 4 
Frames: 5 1 4 
Frames: 5 1 4 
Frames: 5 2 4 
Frames: 5 2 0 
Frames: 3 2 0 
Frames: 3 4 0 
Frames: 3 4 0 
Total Page Hits: 4
Total Page Faults: 11
Total Page Misses: 11